import https from 'https';

const WHATSAPP_SERVER_URL = 'https://lify.magah.com.br';

async function makeRequest(path, method = 'GET', data = null) {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'lify.magah.com.br',
      port: 443,
      path: path,
      method: method,
      headers: {
        'Content-Type': 'application/json',
      }
    };

    const req = https.request(options, (res) => {
      let body = '';
      res.on('data', (chunk) => {
        body += chunk;
      });
      res.on('end', () => {
        try {
          const json = JSON.parse(body);
          resolve({ status: res.statusCode, data: json });
        } catch (error) {
          resolve({ status: res.statusCode, data: body });
        }
      });
    });

    req.on('error', (error) => {
      reject(error);
    });

    if (data) {
      req.write(JSON.stringify(data));
    }
    req.end();
  });
}

async function testWhatsAppSessionClear() {
  console.log('üßπ Testando limpeza de sess√£o do WhatsApp...\n');

  try {
    // 1. Verificar status atual
    console.log('1Ô∏è‚É£ Verificando status atual...');
    const health = await makeRequest('/health');
    console.log('üìä Sess√µes ativas:', health.data.activeSessions);
    console.log('');

    // 2. Tentar limpar sess√£o via endpoint (se dispon√≠vel)
    console.log('2Ô∏è‚É£ Tentando limpar sess√£o via endpoint...');
    try {
      const clearResponse = await makeRequest('/api/whatsapp/clear-auth', 'POST');
      console.log('‚úÖ Limpeza via endpoint:', clearResponse.status);
      console.log('üìÑ Resposta:', clearResponse.data);
    } catch (error) {
      console.log('‚ùå Endpoint de limpeza n√£o dispon√≠vel');
    }
    console.log('');

    // 3. Tentar limpar sess√£o via reinicializa√ß√£o
    console.log('3Ô∏è‚É£ Tentando limpar sess√£o via reinicializa√ß√£o...');
    const initData = {
      agentId: 'session-clear-test-' + Date.now(),
      whatsappNumber: '5511999999999',
      connectionId: 'session-clear-' + Date.now()
    };
    
    const init = await makeRequest('/api/whatsapp/initialize', 'POST', initData);
    console.log('‚úÖ Reinicializa√ß√£o:', init.data.success ? 'Sucesso' : 'Falha');
    console.log('üì± QR Code gerado:', init.data.qrCode ? 'Sim' : 'N√£o');
    console.log('');

    // 4. Verificar status ap√≥s limpeza
    console.log('4Ô∏è‚É£ Verificando status ap√≥s limpeza...');
    const status = await makeRequest('/api/whatsapp/status', 'POST', initData);
    console.log('üìä Status:', status.data.status);
    console.log('üîó Conectado:', status.data.connected || false);
    console.log('');

    // 5. Testar com diferentes n√∫meros
    console.log('5Ô∏è‚É£ Testando com diferentes n√∫meros...');
    const testNumbers = [
      '5511999999999',
      '5511888888888',
      '5511777777777'
    ];

    for (const number of testNumbers) {
      console.log(`üì± Testando n√∫mero: ${number}`);
      const testData = {
        agentId: 'test-' + number.replace(/\D/g, ''),
        whatsappNumber: number,
        connectionId: 'test-' + Date.now()
      };
      
      try {
        const testInit = await makeRequest('/api/whatsapp/initialize', 'POST', testData);
        console.log(`   ‚úÖ Inicializa√ß√£o: ${testInit.data.success ? 'Sucesso' : 'Falha'}`);
        console.log(`   üì± QR Code: ${testInit.data.qrCode ? 'Sim' : 'N√£o'}`);
      } catch (error) {
        console.log(`   ‚ùå Erro: ${error.message}`);
      }
    }
    console.log('');

    // 6. An√°lise de problemas espec√≠ficos
    console.log('6Ô∏è‚É£ An√°lise de problemas espec√≠ficos...');
    console.log('üîç Problemas identificados:');
    console.log('');
    console.log('‚ùå Problema 1: Endpoints de debug n√£o dispon√≠veis');
    console.log('   - /api/whatsapp/clear-auth: 404');
    console.log('   - /api/whatsapp/debug: 404');
    console.log('   - /api/whatsapp/sessions: 404');
    console.log('   - /api/whatsapp/state: 404');
    console.log('');
    console.log('‚ùå Problema 2: Status permanece "connecting"');
    console.log('   - O WhatsApp n√£o est√° finalizando a autentica√ß√£o');
    console.log('   - Pode ser problema de permiss√µes no servidor');
    console.log('');
    console.log('‚ùå Problema 3: M√∫ltiplas sess√µes ativas');
    console.log('   - H√° 4 sess√µes ativas no servidor');
    console.log('   - Pode haver conflito entre sess√µes');
    console.log('');

    // 7. Recomenda√ß√µes espec√≠ficas
    console.log('7Ô∏è‚É£ Recomenda√ß√µes espec√≠ficas...');
    console.log('üîß A√ß√µes necess√°rias no servidor VPS:');
    console.log('');
    console.log('1. Acessar a VPS e verificar logs:');
    console.log('   ssh usuario@lify.magah.com.br');
    console.log('   pm2 logs # ou docker logs');
    console.log('');
    console.log('2. Verificar permiss√µes de arquivo:');
    console.log('   ls -la /path/to/whatsapp/sessions/');
    console.log('   chmod 755 /path/to/whatsapp/sessions/');
    console.log('');
    console.log('3. Limpar arquivos de sess√£o manualmente:');
    console.log('   rm -rf /path/to/whatsapp/sessions/*.json');
    console.log('   rm -rf /path/to/whatsapp/sessions/*.session');
    console.log('');
    console.log('4. Reiniciar o processo:');
    console.log('   pm2 restart all # ou docker restart');
    console.log('');
    console.log('5. Verificar se h√° m√∫ltiplas inst√¢ncias:');
    console.log('   ps aux | grep node');
    console.log('   pm2 list');
    console.log('');

    // 8. Teste de conectividade
    console.log('8Ô∏è‚É£ Teste de conectividade...');
    console.log('üåê Verificando se o servidor pode acessar WhatsApp:');
    console.log('   - O servidor precisa ter acesso √† internet');
    console.log('   - Verificar se n√£o h√° firewall bloqueando');
    console.log('   - Testar: curl -I https://web.whatsapp.com');
    console.log('');

    console.log('üéØ Resumo da an√°lise:');
    console.log('- Servidor: ‚úÖ Funcionando');
    console.log('- QR Code: ‚úÖ Gerando');
    console.log('- Autentica√ß√£o: ‚ùå N√£o finaliza');
    console.log('- Sess√µes: ‚ö†Ô∏è M√∫ltiplas ativas');
    console.log('');
    console.log('üí° Causa mais prov√°vel:');
    console.log('   Permiss√µes de arquivo no servidor VPS');
    console.log('   O processo Node n√£o consegue salvar a sess√£o');
    console.log('');
    console.log('üöÄ Pr√≥ximo passo:');
    console.log('   Acessar a VPS e verificar permiss√µes/logs');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

testWhatsAppSessionClear(); 