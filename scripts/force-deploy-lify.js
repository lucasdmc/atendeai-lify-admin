#!/usr/bin/env node

/**
 * Script para for√ßar deploy no Lify
 * Tenta diferentes m√©todos para garantir que o deploy seja feito
 */

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üöÄ For√ßando deploy no Lify...\n');

// Verificar se estamos no diret√≥rio correto
const currentDir = process.cwd();
const distPath = path.join(currentDir, 'dist');

if (!fs.existsSync(distPath)) {
  console.error('‚ùå Pasta dist n√£o encontrada!');
  console.log('   Execute primeiro: npm run build:prod');
  process.exit(1);
}

console.log('‚úÖ Pasta dist encontrada');

// M√©todo 1: Tentar usar Git (se conectado)
function tryGitDeploy() {
  console.log('\nüì¶ Tentando deploy via Git...');
  
  try {
    // Verificar se √© um reposit√≥rio Git
    execSync('git status', { stdio: 'pipe' });
    
    console.log('üîÑ Fazendo commit das altera√ß√µes...');
    execSync('git add .', { stdio: 'inherit' });
    execSync('git commit -m "Fix: Update WhatsApp server URL to HTTP"', { stdio: 'inherit' });
    
    console.log('üöÄ Fazendo push...');
    execSync('git push origin main', { stdio: 'inherit' });
    
    console.log('‚úÖ Deploy via Git conclu√≠do!');
    return true;
  } catch (error) {
    console.log('‚ùå Deploy via Git falhou:', error.message);
    return false;
  }
}

// M√©todo 2: Tentar usar Lify CLI (se dispon√≠vel)
function tryLifyCLI() {
  console.log('\nüì¶ Tentando deploy via Lify CLI...');
  
  try {
    // Verificar se o Lify CLI est√° instalado
    execSync('lify --version', { stdio: 'pipe' });
    
    console.log('üöÄ Fazendo deploy via Lify CLI...');
    execSync('lify deploy', { stdio: 'inherit' });
    
    console.log('‚úÖ Deploy via Lify CLI conclu√≠do!');
    return true;
  } catch (error) {
    console.log('‚ùå Lify CLI n√£o dispon√≠vel:', error.message);
    return false;
  }
}

// M√©todo 3: Tentar usar Vercel CLI (alternativa)
function tryVercelCLI() {
  console.log('\nüì¶ Tentando deploy via Vercel CLI...');
  
  try {
    // Verificar se o Vercel CLI est√° instalado
    execSync('vercel --version', { stdio: 'pipe' });
    
    console.log('üöÄ Fazendo deploy via Vercel...');
    execSync('vercel --prod', { stdio: 'inherit' });
    
    console.log('‚úÖ Deploy via Vercel conclu√≠do!');
    return true;
  } catch (error) {
    console.log('‚ùå Vercel CLI n√£o dispon√≠vel:', error.message);
    return false;
  }
}

// M√©todo 4: Criar arquivo de deploy manual
function createManualDeployFiles() {
  console.log('\nüì¶ Criando arquivos para deploy manual...');
  
  try {
    // Criar arquivo de configura√ß√£o para deploy manual
    const deployConfig = {
      projectName: 'atendeai-lify-admin',
      environment: {
        VITE_SUPABASE_URL: 'https://niakqdolcdwxtrkbqmdi.supabase.co',
        VITE_SUPABASE_ANON_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAxODI1NTksImV4cCI6MjA2NTc1ODU1OX0.90ihAk2geP1JoHIvMj_pxeoMe6dwRwH-rBbJwbFeomw',
        VITE_GOOGLE_CLIENT_ID: '367439444210-phr1e6oiu8hnh5vm57lpoud5lhrdda2o.apps.googleusercontent.com',
        VITE_WHATSAPP_SERVER_URL: 'http://31.97.241.19:3001',
        VITE_BACKEND_URL: 'http://31.97.241.19:3001',
        NODE_ENV: 'production'
      },
      buildCommand: 'npm run build:prod',
      outputDirectory: 'dist',
      deployUrl: 'https://atendeai.lify.com.br'
    };
    
    fs.writeFileSync('deploy-config.json', JSON.stringify(deployConfig, null, 2));
    
    // Criar script de deploy
    const deployScript = `#!/bin/bash
echo "üöÄ Deploy Manual para Lify"
echo "=========================="
echo ""
echo "1. Acesse: https://lify.com.br"
echo "2. Fa√ßa login na sua conta"
echo "3. Selecione o projeto: atendeai-lify-admin"
echo "4. V√° para a se√ß√£o de configura√ß√µes"
echo "5. Configure as vari√°veis de ambiente:"
echo ""
echo "VITE_WHATSAPP_SERVER_URL=http://31.97.241.19:3001"
echo "VITE_BACKEND_URL=http://31.97.241.19:3001"
echo ""
echo "6. Fa√ßa upload da pasta dist/"
echo "7. Clique em 'Deploy' ou 'Force Deploy'"
echo "8. Aguarde alguns minutos"
echo ""
echo "‚úÖ Deploy conclu√≠do!"
`;
    
    fs.writeFileSync('deploy-manual.sh', deployScript);
    execSync('chmod +x deploy-manual.sh', { stdio: 'inherit' });
    
    console.log('‚úÖ Arquivos de deploy manual criados:');
    console.log('   - deploy-config.json');
    console.log('   - deploy-manual.sh');
    
    return true;
  } catch (error) {
    console.log('‚ùå Erro ao criar arquivos de deploy:', error.message);
    return false;
  }
}

// Fun√ß√£o para testar se o deploy funcionou
function testDeploy() {
  console.log('\nüîç Testando se o deploy funcionou...');
  
  setTimeout(async () => {
    try {
      const response = await fetch('https://atendeai.lify.com.br');
      if (response.ok) {
        console.log('‚úÖ Frontend acess√≠vel ap√≥s deploy');
        
        // Testar se est√° usando HTTP
        const testResponse = await fetch('https://atendeai.lify.com.br/api/test-config');
        console.log('üìã Verificando configura√ß√µes...');
      } else {
        console.log('‚ùå Frontend n√£o acess√≠vel ap√≥s deploy');
      }
    } catch (error) {
      console.log('‚ùå Erro ao testar deploy:', error.message);
    }
  }, 30000); // Aguardar 30 segundos
}

// Fun√ß√£o principal
async function main() {
  console.log('üéØ For√ßando deploy no Lify...\n');
  
  let deploySuccess = false;
  
  // Tentar diferentes m√©todos de deploy
  console.log('üìã Tentando m√©todos de deploy...\n');
  
  // M√©todo 1: Git
  if (!deploySuccess) {
    deploySuccess = tryGitDeploy();
  }
  
  // M√©todo 2: Lify CLI
  if (!deploySuccess) {
    deploySuccess = tryLifyCLI();
  }
  
  // M√©todo 3: Vercel CLI
  if (!deploySuccess) {
    deploySuccess = tryVercelCLI();
  }
  
  // M√©todo 4: Deploy manual
  if (!deploySuccess) {
    deploySuccess = createManualDeployFiles();
  }
  
  if (deploySuccess) {
    console.log('\nüéâ Deploy iniciado com sucesso!');
    console.log('\nüìã Pr√≥ximos passos:');
    console.log('   1. Aguarde alguns minutos para o processamento');
    console.log('   2. Acesse: https://atendeai.lify.com.br');
    console.log('   3. Teste a gera√ß√£o de QR Code');
    console.log('   4. Verifique se n√£o h√° erros de CORS');
    
    // Testar deploy ap√≥s um tempo
    testDeploy();
  } else {
    console.log('\n‚ùå Todos os m√©todos de deploy falharam.');
    console.log('\nüí° Solu√ß√£o manual:');
    console.log('   1. Acesse: https://lify.com.br');
    console.log('   2. Fa√ßa login na sua conta');
    console.log('   3. Selecione o projeto atendeai-lify-admin');
    console.log('   4. Configure as vari√°veis de ambiente:');
    console.log('      VITE_WHATSAPP_SERVER_URL=http://31.97.241.19:3001');
    console.log('      VITE_BACKEND_URL=http://31.97.241.19:3001');
    console.log('   5. Fa√ßa upload da pasta dist/');
    console.log('   6. Clique em "Deploy" ou "Force Deploy"');
  }
}

// Executar
main().catch(console.error); 