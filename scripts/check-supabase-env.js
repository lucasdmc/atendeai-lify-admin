import dotenv from 'dotenv';
import { createClient } from '@supabase/supabase-js';

dotenv.config();

async function checkSupabaseEnvironment() {
  console.log('üîç Verificando vari√°veis de ambiente no Supabase...\n');

  const supabaseUrl = process.env.VITE_SUPABASE_URL;
  const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

  if (!supabaseUrl || !supabaseAnonKey) {
    console.log('‚ùå Vari√°veis do Supabase n√£o encontradas localmente');
    return;
  }

  const supabase = createClient(supabaseUrl, supabaseAnonKey);

  try {
    // 1. Verificar vari√°veis locais
    console.log('1Ô∏è‚É£ Vari√°veis locais (.env):');
    const localClientId = process.env.VITE_GOOGLE_CLIENT_ID;
    const localClientSecret = process.env.VITE_GOOGLE_CLIENT_SECRET;
    
    console.log(`   VITE_GOOGLE_CLIENT_ID: ${localClientId || 'N√ÉO CONFIGURADO'}`);
    console.log(`   VITE_GOOGLE_CLIENT_SECRET: ${localClientSecret ? 'CONFIGURADO' : 'N√ÉO CONFIGURADO'}`);

    // 2. Testar Edge Function para ver se as vari√°veis est√£o sendo lidas
    console.log('\n2Ô∏è‚É£ Testando Edge Function para verificar vari√°veis:');
    
    const functionUrl = `${supabaseUrl}/functions/v1/google-user-auth`;
    
    // Teste 1: Iniciar autentica√ß√£o (vai mostrar o client_id nos logs)
    console.log('   Testando initiate-auth...');
    const response1 = await fetch(functionUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${supabaseAnonKey}`,
      },
      body: JSON.stringify({
        action: 'initiate-auth',
        state: 'test-validation',
        userId: 'test-user'
      })
    });

    if (response1.ok) {
      const data1 = await response1.json();
      console.log('   ‚úÖ initiate-auth funcionou');
      
      // Verificar se a URL gerada cont√©m o client_id correto
      if (data1.authUrl && data1.authUrl.includes(localClientId)) {
        console.log('   ‚úÖ Client ID na Edge Function est√° correto');
      } else {
        console.log('   ‚ö†Ô∏è  Client ID na Edge Function pode estar diferente');
        console.log(`   üìã URL gerada: ${data1.authUrl}`);
      }
    } else {
      console.log(`   ‚ùå initiate-auth falhou: ${response1.status}`);
      const error1 = await response1.text();
      console.log(`   üìÑ Erro: ${error1}`);
    }

    // 3. Verificar se a Edge Function est√° usando as vari√°veis corretas
    console.log('\n3Ô∏è‚É£ Verificando se as vari√°veis est√£o sendo usadas corretamente:');
    
    // Fazer uma requisi√ß√£o que vai gerar logs na Edge Function
    console.log('   Fazendo requisi√ß√£o para gerar logs na Edge Function...');
    console.log('   (Verifique os logs no Supabase Dashboard para ver os valores das vari√°veis)');
    
    const response2 = await fetch(functionUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${supabaseAnonKey}`,
      },
      body: JSON.stringify({
        action: 'handle-callback',
        code: 'invalid-code-for-testing',
        state: 'test-user:test-state'
      })
    });

    console.log(`   Status da requisi√ß√£o: ${response2.status}`);
    
    if (response2.status === 400) {
      console.log('   ‚úÖ Edge Function est√° respondendo (erro esperado para c√≥digo inv√°lido)');
    }

    // 4. Compara√ß√£o e recomenda√ß√µes
    console.log('\n4Ô∏è‚É£ An√°lise e recomenda√ß√µes:');
    
    if (localClientId && localClientSecret) {
      console.log('   ‚úÖ Vari√°veis locais est√£o configuradas');
      console.log('   üìã Para garantir que o Supabase use as mesmas vari√°veis:');
      console.log('   1. Acesse o Supabase Dashboard');
      console.log('   2. V√° em Settings > Environment Variables');
      console.log('   3. Configure:');
      console.log(`      VITE_GOOGLE_CLIENT_ID = ${localClientId}`);
      console.log(`      VITE_GOOGLE_CLIENT_SECRET = ${localClientSecret.substring(0, 10)}...`);
      console.log('   4. Salve e redeploye a Edge Function');
    } else {
      console.log('   ‚ùå Vari√°veis locais n√£o est√£o configuradas');
      console.log('   üìã Configure o arquivo .env com as vari√°veis do Google OAuth2');
    }

    // 5. Pr√≥ximos passos
    console.log('\n5Ô∏è‚É£ Pr√≥ximos passos para resolver o erro 401:');
    console.log('   1. Verifique se o client_id e client_secret no Supabase s√£o iguais aos do Google Cloud Console');
    console.log('   2. Confirme se a redirect URI est√° cadastrada no Google Cloud Console');
    console.log('   3. Redeploye a Edge Function ap√≥s qualquer altera√ß√£o');
    console.log('   4. Teste o fluxo completo no navegador');

  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error.message);
  }
}

checkSupabaseEnvironment().catch(console.error); 