import dotenv from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// Carregar vari√°veis de ambiente
dotenv.config();

async function validateGoogleConfig() {
  console.log('üîç Validando configura√ß√µes do Google OAuth2...\n');

  // 1. Verificar vari√°veis de ambiente locais
  console.log('1Ô∏è‚É£ Verificando vari√°veis de ambiente locais:');
  
  const localVars = {
    'VITE_GOOGLE_CLIENT_ID': process.env.VITE_GOOGLE_CLIENT_ID,
    'VITE_GOOGLE_CLIENT_SECRET': process.env.VITE_GOOGLE_CLIENT_SECRET,
    'VITE_SUPABASE_URL': process.env.VITE_SUPABASE_URL,
    'VITE_SUPABASE_ANON_KEY': process.env.VITE_SUPABASE_ANON_KEY,
  };

  let hasLocalConfig = true;
  for (const [key, value] of Object.entries(localVars)) {
    if (value) {
      if (key.includes('SECRET')) {
        console.log(`   ‚úÖ ${key}: ${value.substring(0, 10)}...`);
      } else {
        console.log(`   ‚úÖ ${key}: ${value}`);
      }
    } else {
      console.log(`   ‚ùå ${key}: N√ÉO CONFIGURADO`);
      hasLocalConfig = false;
    }
  }

  if (!hasLocalConfig) {
    console.log('\n‚ö†Ô∏è  Vari√°veis de ambiente locais n√£o encontradas.');
    console.log('   Isso √© normal se voc√™ estiver usando apenas as vari√°veis do Supabase.');
  }

  // 2. Verificar configura√ß√£o do Supabase
  console.log('\n2Ô∏è‚É£ Verificando configura√ß√£o do Supabase:');
  
  const supabaseUrl = process.env.VITE_SUPABASE_URL;
  const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

  if (!supabaseUrl || !supabaseAnonKey) {
    console.log('   ‚ùå N√£o √© poss√≠vel conectar ao Supabase sem URL e chave an√¥nima.');
    console.log('   Configure VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY no arquivo .env');
    return;
  }

  try {
    const supabase = createClient(supabaseUrl, supabaseAnonKey);
    
    // Verificar se conseguimos conectar ao Supabase
    const { data, error } = await supabase.from('user_calendars').select('count').limit(1);
    
    if (error) {
      console.log('   ‚ùå Erro ao conectar ao Supabase:', error.message);
      return;
    }

    console.log('   ‚úÖ Conectado ao Supabase com sucesso');
    console.log('   üìã Project ID:', supabaseUrl.split('//')[1].split('.')[0]);

    // 3. Verificar se as Edge Functions est√£o acess√≠veis
    console.log('\n3Ô∏è‚É£ Verificando Edge Functions:');
    
    try {
      const functionUrl = `${supabaseUrl}/functions/v1/google-user-auth`;
      const response = await fetch(functionUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${supabaseAnonKey}`,
        },
        body: JSON.stringify({
          action: 'initiate-auth',
          state: 'test',
          userId: 'test-user'
        })
      });

      if (response.status === 200) {
        console.log('   ‚úÖ Edge Function google-user-auth est√° acess√≠vel');
      } else {
        console.log(`   ‚ö†Ô∏è  Edge Function retornou status: ${response.status}`);
        const errorText = await response.text();
        console.log('   üìÑ Resposta:', errorText.substring(0, 200) + '...');
      }
    } catch (error) {
      console.log('   ‚ùå Erro ao acessar Edge Function:', error.message);
    }

  } catch (error) {
    console.log('   ‚ùå Erro ao conectar ao Supabase:', error.message);
  }

  // 4. Checklist de valida√ß√£o
  console.log('\n4Ô∏è‚É£ Checklist de valida√ß√£o:');
  console.log('   üìã Para resolver o erro 401 invalid_client:');
  console.log('   1. Verifique se VITE_GOOGLE_CLIENT_ID est√° correto no Supabase Dashboard');
  console.log('   2. Verifique se VITE_GOOGLE_CLIENT_SECRET est√° correto no Supabase Dashboard');
  console.log('   3. Confirme se a redirect URI est√° cadastrada no Google Cloud Console:');
  console.log('      - https://atendeai.lify.com.br/agendamentos');
  console.log('      - http://localhost:8080/agendamentos (desenvolvimento)');
  console.log('   4. Redeploye a Edge Function ap√≥s alterar vari√°veis de ambiente');
  console.log('   5. Limpe o cache do navegador e teste novamente');

  // 5. Comandos √∫teis
  console.log('\n5Ô∏è‚É£ Comandos √∫teis:');
  console.log('   Para verificar logs da Edge Function:');
  console.log('   - Acesse o Supabase Dashboard > Edge Functions > google-user-auth > Logs');
  console.log('   - Ou use: supabase functions logs google-user-auth');
  console.log('');
  console.log('   Para redeployar a fun√ß√£o:');
  console.log('   - supabase functions deploy google-user-auth');
  console.log('');
  console.log('   Para verificar vari√°veis de ambiente:');
  console.log('   - Supabase Dashboard > Settings > Environment Variables');
}

// Executar valida√ß√£o
validateGoogleConfig().catch(console.error); 