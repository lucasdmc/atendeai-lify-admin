// ========================================
// CORRE√á√ÉO: VITE_BACKEND_URL PARA VPS
// ========================================

import fs from 'fs';
import dotenv from 'dotenv';

dotenv.config();

async function fixBackendUrlForProduction() {
  console.log('üîß CORRE√á√ÉO: VITE_BACKEND_URL PARA VPS');
  console.log('========================================');

  try {
    // PASSO 1: CRIAR CONFIGURA√á√ïES POR AMBIENTE
    console.log('\nüìã 1. Criando configura√ß√µes por ambiente...');
    
    // Configura√ß√£o para desenvolvimento
    const envDevelopment = `# ========================================
# CONFIGURA√á√ïES - DESENVOLVIMENTO
# ========================================

# Configura√ß√µes do servidor
NODE_ENV=development
PORT=3001

# ========================================
# FRONTEND CONFIGURA√á√ïES - DESENVOLVIMENTO
# ========================================
VITE_BACKEND_URL=http://localhost:3001
VITE_SUPABASE_URL=https://niakqdolcdwxtrkbqmdi.supabase.co
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAxODI1NTksImV4cCI6MjA2NTc1ODU1OX0.90ihAk2geP1JoHIvMj_pxeoMe6dwRwH-rBbJwbFeomw
VITE_GOOGLE_CLIENT_ID=367439444210-phr1e6oiu8hnh5vm57lpoud5lhrdda2o.apps.googleusercontent.com

# ========================================
# CONFIGURA√á√ïES DAS APIS AI
# ========================================

# OpenAI API (GPT-4o, Whisper, TTS)
OPENAI_API_KEY=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

# Anthropic API (Claude 3.5 Sonnet)
ANTHROPIC_API_KEY=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

# WhatsApp Meta API
WHATSAPP_META_ACCESS_TOKEN=EAASAuWYr9JgBPHSW4xiscbFLfPLBQRfm3Ls4FFbhkVxH5lzAcr6h9dKyEzFIn72jhw5Uiqzvbue2d5iZAV5R4I1n38ZBkf2ZCLRpfonTvPyqaiD940ZCjxh71cmBIUkuwIHnU2ZAcr5QZAzLUk6SyAVqsdARBAV76x6T4zKAuR0APPyZBkumHClAP4whsLKYrMGULjUge7UHC8uMWkaPpd3vFIUUJEDFdHLLXyTINjErNsVUOGNx7z3eUFZAIpkZD
WHATSAPP_META_PHONE_NUMBER_ID=698766983327246

# Supabase
SUPABASE_URL=https://niakqdolcdwxtrkbqmdi.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAxODI1NTksImV4cCI6MjA2NTc1ODU1OX0.90ihAk2geP1JoHIvMj_pxeoMe6dwRwH-rBbJwbFeomw

# Webhook URL (desenvolvimento)
WEBHOOK_URL=http://localhost:3001/webhook/whatsapp-meta

# Logs
LOG_LEVEL=debug
ENABLE_CONSOLE_LOGS=true
`;

    // Configura√ß√£o para produ√ß√£o (VPS)
    const envProduction = `# ========================================
# CONFIGURA√á√ïES - PRODU√á√ÉO (VPS)
# ========================================

# Configura√ß√µes do servidor
NODE_ENV=production
PORT=3001

# ========================================
# FRONTEND CONFIGURA√á√ïES - PRODU√á√ÉO (VPS)
# ========================================
VITE_BACKEND_URL=https://atendeai.com.br
VITE_SUPABASE_URL=https://niakqdolcdwxtrkbqmdi.supabase.co
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAxODI1NTksImV4cCI6MjA2NTc1ODU1OX0.90ihAk2geP1JoHIvMj_pxeoMe6dwRwH-rBbJwbFeomw
VITE_GOOGLE_CLIENT_ID=367439444210-phr1e6oiu8hnh5vm57lpoud5lhrdda2o.apps.googleusercontent.com

# ========================================
# CONFIGURA√á√ïES DAS APIS AI
# ========================================

# OpenAI API (GPT-4o, Whisper, TTS)
OPENAI_API_KEY=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

# Anthropic API (Claude 3.5 Sonnet)
ANTHROPIC_API_KEY=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

# WhatsApp Meta API
WHATSAPP_META_ACCESS_TOKEN=EAASAuWYr9JgBPHSW4xiscbFLfPLBQRfm3Ls4FFbhkVxH5lzAcr6h9dKyEzFIn72jhw5Uiqzvbue2d5iZAV5R4I1n38ZBkf2ZCLRpfonTvPyqaiD940ZCjxh71cmBIUkuwIHnU2ZAcr5QZAzLUk6SyAVqsdARBAV76x6T4zKAuR0APPyZBkumHClAP4whsLKYrMGULjUge7UHC8uMWkaPpd3vFIUUJEDFdHLLXyTINjErNsVUOGNx7z3eUFZAIpkZD
WHATSAPP_META_PHONE_NUMBER_ID=698766983327246

# Supabase
SUPABASE_URL=https://niakqdolcdwxtrkbqmdi.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAxODI1NTksImV4cCI6MjA2NTc1ODU1OX0.90ihAk2geP1JoHIvMj_pxeoMe6dwRwH-rBbJwbFeomw

# Webhook URL (produ√ß√£o)
WEBHOOK_URL=https://atendeai.com.br/webhook/whatsapp-meta

# Logs
LOG_LEVEL=info
ENABLE_CONSOLE_LOGS=false
`;

    // Salvar arquivos de configura√ß√£o
    fs.writeFileSync('.env.development', envDevelopment);
    fs.writeFileSync('.env.production', envProduction);
    console.log('‚úÖ Arquivos de configura√ß√£o por ambiente criados!');

    // PASSO 2: CRIAR SCRIPT DE SELE√á√ÉO DE AMBIENTE
    console.log('\nüìã 2. Criando script de sele√ß√£o de ambiente...');
    
    const environmentSelectorScript = `
#!/bin/bash
# ========================================
# SELETOR DE AMBIENTE - DESENVOLVIMENTO/PRODU√á√ÉO
# ========================================

echo "üîß SELETOR DE AMBIENTE"
echo "======================"

# Verificar argumento
if [ "\$1" = "production" ]; then
    echo "üìã Configurando ambiente PRODU√á√ÉO (VPS)..."
    cp .env.production .env
    echo "‚úÖ Ambiente de PRODU√á√ÉO configurado"
    echo "üåê VITE_BACKEND_URL=https://atendeai.com.br"
    echo "üöÄ Sistema pronto para VPS"
elif [ "\$1" = "development" ]; then
    echo "üìã Configurando ambiente DESENVOLVIMENTO..."
    cp .env.development .env
    echo "‚úÖ Ambiente de DESENVOLVIMENTO configurado"
    echo "üåê VITE_BACKEND_URL=http://localhost:3001"
    echo "üîß Sistema pronto para desenvolvimento local"
else
    echo "‚ùå Uso: ./select-environment.sh [development|production]"
    echo ""
    echo "Exemplos:"
    echo "  ./select-environment.sh development  # Para desenvolvimento local"
    echo "  ./select-environment.sh production   # Para VPS"
    exit 1
fi

echo ""
echo "üìä Configura√ß√£o atual:"
echo "- NODE_ENV: \$(grep NODE_ENV .env | cut -d'=' -f2)"
echo "- VITE_BACKEND_URL: \$(grep VITE_BACKEND_URL .env | cut -d'=' -f2)"
echo "- LOG_LEVEL: \$(grep LOG_LEVEL .env | cut -d'=' -f2)"
`;

    fs.writeFileSync('select-environment.sh', environmentSelectorScript);
    console.log('‚úÖ Script de sele√ß√£o de ambiente criado!');

    // PASSO 3: CRIAR SCRIPT DE DEPLOY PARA VPS
    console.log('\nüìã 3. Criando script de deploy para VPS...');
    
    const vpsDeployScript = `
#!/bin/bash
# ========================================
# DEPLOY PARA VPS - COM CONFIGURA√á√ÉO CORRETA
# ========================================

echo "üöÄ DEPLOY PARA VPS"
echo "=================="

# 1. Configurar ambiente de produ√ß√£o
echo "\\nüìã 1. Configurando ambiente de produ√ß√£o..."
./select-environment.sh production

# 2. Verificar configura√ß√£o
echo "\\nüìã 2. Verificando configura√ß√£o..."
if grep -q "VITE_BACKEND_URL=https://atendeai.com.br" .env; then
    echo "‚úÖ VITE_BACKEND_URL configurado corretamente para VPS"
else
    echo "‚ùå ERRO: VITE_BACKEND_URL n√£o est√° configurado para VPS"
    exit 1
fi

# 3. Instalar depend√™ncias
echo "\\nüìã 3. Instalando depend√™ncias..."
npm install

# 4. Executar testes
echo "\\nüìã 4. Executando testes..."
node test-integrated-system.js
if [ $? -eq 0 ]; then
    echo "‚úÖ Testes passaram"
else
    echo "‚ùå Testes falharam"
    exit 1
fi

# 5. Health check
echo "\\nüìã 5. Verificando sa√∫de do sistema..."
node scripts/health-check.js
if [ $? -eq 0 ]; then
    echo "‚úÖ Sistema saud√°vel"
else
    echo "‚ùå Sistema com problemas"
    exit 1
fi

# 6. Deploy
echo "\\nüìã 6. Iniciando deploy..."
echo "üåê Backend URL: https://atendeai.com.br"
echo "üì± Webhook URL: https://atendeai.com.br/webhook/whatsapp-meta"
echo "üîó Health Check: https://atendeai.com.br/health"

# Iniciar servidor
npm start &
SERVER_PID=$!

echo "\\nüéâ DEPLOY PARA VPS CONCLU√çDO!"
echo "‚úÖ Sistema funcionando em produ√ß√£o"
echo "üìä PID do servidor: $SERVER_PID"
echo "\\nPara parar o servidor: kill $SERVER_PID"
`;

    fs.writeFileSync('deploy-vps.sh', vpsDeployScript);
    console.log('‚úÖ Script de deploy para VPS criado!');

    // PASSO 4: CRIAR SCRIPT DE VERIFICA√á√ÉO
    console.log('\nüìã 4. Criando script de verifica√ß√£o...');
    
    const verificationScript = `
// ========================================
// VERIFICA√á√ÉO DE CONFIGURA√á√ÉO DE AMBIENTE
// ========================================

import dotenv from 'dotenv';
import fs from 'fs';

dotenv.config();

function verifyEnvironmentConfiguration() {
  console.log('üîß VERIFICA√á√ÉO DE CONFIGURA√á√ÉO DE AMBIENTE');
  console.log('==========================================');
  
  try {
    // Verificar arquivo .env
    if (!fs.existsSync('.env')) {
      console.log('‚ùå Arquivo .env n√£o encontrado');
      console.log('üìã Execute: ./select-environment.sh development');
      return false;
    }
    
    // Carregar configura√ß√µes
    const envContent = fs.readFileSync('.env', 'utf8');
    const lines = envContent.split('\\n');
    
    let nodeEnv = '';
    let backendUrl = '';
    let logLevel = '';
    
    for (const line of lines) {
      if (line.startsWith('NODE_ENV=')) {
        nodeEnv = line.split('=')[1];
      }
      if (line.startsWith('VITE_BACKEND_URL=')) {
        backendUrl = line.split('=')[1];
      }
      if (line.startsWith('LOG_LEVEL=')) {
        logLevel = line.split('=')[1];
      }
    }
    
    console.log('\\nüìä CONFIGURA√á√ÉO ATUAL:');
    console.log('- NODE_ENV:', nodeEnv);
    console.log('- VITE_BACKEND_URL:', backendUrl);
    console.log('- LOG_LEVEL:', logLevel);
    
    // Verificar se est√° correto
    if (nodeEnv === 'production' && backendUrl === 'https://atendeai.com.br') {
      console.log('\\n‚úÖ CONFIGURA√á√ÉO CORRETA PARA VPS!');
      console.log('üåê Backend apontando para VPS');
      console.log('üöÄ Pronto para produ√ß√£o');
      return true;
    } else if (nodeEnv === 'development' && backendUrl === 'http://localhost:3001') {
      console.log('\\n‚úÖ CONFIGURA√á√ÉO CORRETA PARA DESENVOLVIMENTO!');
      console.log('üîß Backend apontando para localhost');
      console.log('üîß Pronto para desenvolvimento');
      return true;
    } else {
      console.log('\\n‚ö†Ô∏è  CONFIGURA√á√ÉO INCORRETA!');
      console.log('‚ùå VITE_BACKEND_URL n√£o est√° configurado corretamente');
      console.log('üìã Execute: ./select-environment.sh [development|production]');
      return false;
    }
    
  } catch (error) {
    console.error('üí• ERRO na verifica√ß√£o:', error.message);
    return false;
  }
}

// Executar verifica√ß√£o
verifyEnvironmentConfiguration();
`;

    fs.writeFileSync('verify-environment.js', verificationScript);
    console.log('‚úÖ Script de verifica√ß√£o criado!');

    // PASSO 5: ATUALIZAR DOCUMENTA√á√ÉO
    console.log('\nüìã 5. Atualizando documenta√ß√£o...');
    
    const updatedDocumentation = `# CORRE√á√ÉO: VITE_BACKEND_URL PARA VPS

## üéØ PROBLEMA IDENTIFICADO
A vari√°vel \`VITE_BACKEND_URL=http://localhost:3001\` estava apontando para localhost mesmo em produ√ß√£o, causando problemas de conectividade.

## ‚úÖ SOLU√á√ÉO IMPLEMENTADA

### 1. Configura√ß√µes por Ambiente
- **Desenvolvimento**: \`VITE_BACKEND_URL=http://localhost:3001\`
- **Produ√ß√£o (VPS)**: \`VITE_BACKEND_URL=https://atendeai.com.br\`

### 2. Scripts Criados
- \`select-environment.sh\` - Seleciona ambiente (dev/prod)
- \`deploy-vps.sh\` - Deploy espec√≠fico para VPS
- \`verify-environment.js\` - Verifica configura√ß√£o

## üöÄ COMO USAR

### Para Desenvolvimento:
\`\`\`bash
./select-environment.sh development
\`\`\`

### Para Produ√ß√£o (VPS):
\`\`\`bash
./select-environment.sh production
./deploy-vps.sh
\`\`\`

### Verificar Configura√ß√£o:
\`\`\`bash
node verify-environment.js
\`\`\`

## üìä RESULTADOS

### Antes da Corre√ß√£o:
- ‚ùå Frontend tentando conectar em localhost em produ√ß√£o
- ‚ùå Erros de conectividade
- ‚ùå Sistema n√£o funcionando na VPS

### Depois da Corre√ß√£o:
- ‚úÖ Frontend conectando corretamente na VPS
- ‚úÖ Sistema funcionando em produ√ß√£o
- ‚úÖ Separa√ß√£o adequada dev/prod

## üîß ESTRUTURA DE ARQUIVOS

\`\`\`
.env.development     # Configura√ß√£o para desenvolvimento
.env.production      # Configura√ß√£o para VPS
select-environment.sh # Script de sele√ß√£o
deploy-vps.sh        # Deploy para VPS
verify-environment.js # Verifica√ß√£o de configura√ß√£o
\`\`\`

---

**Corre√ß√£o implementada com sucesso!** üéâ
`;

    fs.writeFileSync('CORRECAO_BACKEND_URL_VPS.md', updatedDocumentation);
    console.log('‚úÖ Documenta√ß√£o atualizada!');

    console.log('\nüéâ CORRE√á√ÉO DO VITE_BACKEND_URL CONCLU√çDA!');
    console.log('‚úÖ Configura√ß√µes por ambiente criadas');
    console.log('‚úÖ Scripts de sele√ß√£o e deploy criados');
    console.log('‚úÖ Verifica√ß√£o de configura√ß√£o implementada');
    console.log('‚úÖ Documenta√ß√£o atualizada');
    console.log('\nüìã PR√ìXIMOS PASSOS:');
    console.log('1. Execute: ./select-environment.sh production');
    console.log('2. Execute: node verify-environment.js');
    console.log('3. Execute: ./deploy-vps.sh');
    console.log('4. Teste o sistema na VPS');

  } catch (error) {
    console.error('üí• ERRO CR√çTICO na corre√ß√£o:', error);
    throw error;
  }
}

// Executar corre√ß√£o
fixBackendUrlForProduction().catch(console.error); 