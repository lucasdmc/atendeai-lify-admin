const OpenAI = require('openai');

// Testar com a API key atual do VPS
const openai = new OpenAI({
  apiKey: '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'
});

async function testOpenAIAPI() {
  try {
    console.log('üîç TESTANDO API KEY DO OPENAI');
    console.log('================================');
    
    console.log('üìã API Key:', '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');
    
    console.log('\nüß™ Testando chamada simples...');
    
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [{ role: "user", content: "Responda apenas com 'OK' se voc√™ consegue ler esta mensagem." }],
      max_tokens: 10,
      temperature: 0
    });

    const response = completion.choices[0].message.content.trim();
    console.log('‚úÖ RESPOSTA:', response);
    console.log('‚úÖ API KEY FUNCIONAL!');
    
    // Testar modelo GPT-4o tamb√©m
    console.log('\nüß™ Testando GPT-4o...');
    
    const completion2 = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [{ role: "user", content: "Responda apenas com 'GPT4O OK' se voc√™ consegue ler esta mensagem." }],
      max_tokens: 10,
      temperature: 0
    });

    const response2 = completion2.choices[0].message.content.trim();
    console.log('‚úÖ RESPOSTA GPT-4o:', response2);
    console.log('‚úÖ GPT-4o tamb√©m funcional!');
    
    console.log('\nüéØ CONCLUS√ÉO: API KEY EST√Å FUNCIONAL!');
    
  } catch (error) {
    console.error('‚ùå ERRO AO TESTAR API KEY:', error);
    console.log('üîç C√≥digo do erro:', error.code);
    console.log('üìã Mensagem:', error.message);
    console.log('üí° Status:', error.status);
    
    if (error.code === 'invalid_api_key') {
      console.log('‚ùå API KEY INV√ÅLIDA!');
    } else if (error.code === 'insufficient_quota') {
      console.log('‚ùå QUOTA INSUFICIENTE!');
    } else if (error.code === 'rate_limit_exceeded') {
      console.log('‚ùå LIMITE DE TAXA EXCEDIDO!');
    } else {
      console.log('‚ùå OUTRO ERRO:', error.code);
    }
  }
}

testOpenAIAPI(); 