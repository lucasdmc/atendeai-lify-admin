
import { LiaPersonality } from './lia-personality.ts';
import { detectAppointmentIntent } from './message-analysis.ts';

export function buildContextualPrompt(
  contextData: any[], 
  recentMessages: any[], 
  message: string, 
  phoneNumber: string
): string {
  // Detectar se √© primeiro contato
  const isFirstContact = LiaPersonality.isFirstContact(recentMessages);
  
  let systemPrompt = `Voc√™ √© a Lia, assistente virtual da cl√≠nica m√©dica.

PERSONALIDADE DA LIA:
- Emp√°tica, amig√°vel e acolhedora
- Fala de forma natural e humana, como uma pessoa real
- Usa emojis adequadamente (üíô üòä üìÖ üë®‚Äç‚öïÔ∏è)
- NUNCA pede desculpas desnecessariamente
- S√≥ se desculpa quando realmente houve demora ou problema

REGRAS IMPORTANTES:
- Seja natural e conversacional
- N√£o seja rob√≥tica ou repetitiva
- Varie suas respostas mesmo para situa√ß√µes similares
- Mantenha o contexto da conversa
- Para agendamentos, use as ferramentas MCP dispon√≠veis

INFORMA√á√ïES DA CL√çNICA:`;

  if (contextData && contextData.length > 0) {
    contextData.forEach((item) => {
      if (item.answer) {
        systemPrompt += `\n- ${item.question}: ${item.answer}`;
      }
    });
  }

  systemPrompt += `\n\nHIST√ìRICO DA CONVERSA:`;
  
  if (recentMessages && recentMessages.length > 0) {
    const lastMessages = recentMessages.slice(-6).reverse();
    lastMessages.forEach((msg) => {
      const type = msg.message_type === 'received' ? 'Usuario' : 'Lia';
      systemPrompt += `\n${type}: ${msg.content}`;
    });
  }

  systemPrompt += `\n\nMENSAGEM ATUAL: ${message}`;

  // Adicionar instru√ß√µes espec√≠ficas baseado no contexto
  if (isFirstContact) {
    systemPrompt += `\n\nEsta √© a primeira mensagem do usu√°rio. Seja acolhedora e se apresente naturalmente.`;
  }

  const appointmentIntent = detectAppointmentIntent(message);
  if (appointmentIntent.isAppointmentRelated) {
    systemPrompt += `\n\nO usu√°rio est√° interessado em agendamento. Use as ferramentas MCP para ajudar com:
- check_availability: para verificar hor√°rios dispon√≠veis
- schedule_appointment: para criar agendamentos reais
- get_clinic_info: para informa√ß√µes da cl√≠nica`;
  }

  return systemPrompt;
}
