#!/usr/bin/env node

// ========================================
// TESTE DE CORRE√á√ÉO DE FORMATA√á√ÉO DE MENSAGENS
// ========================================
// Este arquivo testa as corre√ß√µes implementadas para os problemas
// de formata√ß√£o identificados nas mensagens da CardioPrime

import { CARDIOPRIME_MESSAGES, formatMessage } from './src/config/cardioprime-messages.js';
import { MESSAGE_EXAMPLES, fixMessageFormatting, usageExamples } from './src/config/message-examples.js';

console.log('üîß TESTE DE CORRE√á√ÉO DE FORMATA√á√ÉO DE MENSAGENS');
console.log('================================================\n');

// ========================================
// TESTE 1: MENSAGENS PR√â-FORMATADAS
// ========================================
console.log('üìã TESTE 1: MENSAGENS PR√â-FORMATADAS');
console.log('----------------------------------------');

console.log('‚úÖ Mensagem de Exames (Formatada):');
console.log(CARDIOPRIME_MESSAGES.formatExamesMessage());
console.log('\n' + '='.repeat(80) + '\n');

console.log('‚úÖ Mensagem de Profissionais (Formatada):');
console.log(CARDIOPRIME_MESSAGES.formatProfissionaisMessage());
console.log('\n' + '='.repeat(80) + '\n');

// ========================================
// TESTE 2: CORRE√á√ÉO AUTOM√ÅTICA
// ========================================
console.log('üîß TESTE 2: CORRE√á√ÉO AUTOM√ÅTICA');
console.log('----------------------------------');

console.log('‚ùå MENSAGEM DE EXAMES - ANTES (Problem√°tica):');
console.log(MESSAGE_EXAMPLES.exames_atual);
console.log('\n' + '='.repeat(80) + '\n');

console.log('‚úÖ MENSAGEM DE EXAMES - DEPOIS (Corrigida):');
const examesCorrigidos = fixMessageFormatting.fixExamesFormat(MESSAGE_EXAMPLES.exames_atual);
console.log(examesCorrigidos);
console.log('\n' + '='.repeat(80) + '\n');

console.log('‚ùå MENSAGEM DE PROFISSIONAIS - ANTES (Problem√°tica):');
console.log(MESSAGE_EXAMPLES.profissionais_atual);
console.log('\n' + '='.repeat(80) + '\n');

console.log('‚úÖ MENSAGEM DE PROFISSIONAIS - DEPOIS (Corrigida):');
const profCorrigidos = fixMessageFormatting.fixProfissionaisFormat(MESSAGE_EXAMPLES.profissionais_atual);
console.log(profCorrigidos);
console.log('\n' + '='.repeat(80) + '\n');

// ========================================
// TESTE 3: UTILIT√ÅRIOS DE FORMATA√á√ÉO
// ========================================
console.log('üõ†Ô∏è TESTE 3: UTILIT√ÅRIOS DE FORMATA√á√ÉO');
console.log('----------------------------------------');

// Teste de formata√ß√£o de lista numerada
const exames = [
  'Ecocardiograma Transtor√°cico: Ultrassom do cora√ß√£o',
  'Teste Ergom√©trico: Teste de esfor√ßo card√≠aco',
  'Holter 24h: Monitoriza√ß√£o cont√≠nua'
];

console.log('‚úÖ Lista Formatada:');
console.log(formatMessage.formatNumberedList(exames));
console.log('\n' + '='.repeat(80) + '\n');

// Teste de formata√ß√£o de nomes
console.log('‚úÖ Nomes de Profissionais Formatados:');
console.log('Dr. Roberto Silva ‚Üí', formatMessage.formatProfessionalName('Dr. Roberto Silva'));
console.log('Dra. Maria Fernanda ‚Üí', formatMessage.formatProfessionalName('Dra. Maria Fernanda'));
console.log('\n' + '='.repeat(80) + '\n');

// Teste de limpeza de formata√ß√£o
const textoComProblemas = `Texto   com    espa√ßos    m√∫ltiplos

e quebras de linha

inconsistentes.`;

console.log('‚úÖ Limpeza de Formata√ß√£o:');
console.log('ANTES:', textoComProblemas);
console.log('DEPOIS:', formatMessage.cleanFormatting(textoComProblemas));
console.log('\n' + '='.repeat(80) + '\n');

// ========================================
// TESTE 4: COMPARA√á√ÉO COM FORMATO ESPERADO
// ========================================
console.log('üìä TESTE 4: COMPARA√á√ÉO COM FORMATO ESPERADO');
console.log('----------------------------------------------');

console.log('üîç Verificando se as mensagens corrigidas correspondem ao esperado...\n');

// Verificar mensagem de exames
const examesCorrigidosMatch = examesCorrigidos.trim() === MESSAGE_EXAMPLES.exames_esperado.trim();
console.log(`üìã Exames: ${examesCorrigidosMatch ? '‚úÖ CORRESPONDE' : '‚ùå N√ÉO CORRESPONDE'}`);

// Verificar mensagem de profissionais
const profCorrigidosMatch = profCorrigidos.trim() === MESSAGE_EXAMPLES.profissionais_esperado.trim();
console.log(`üë®‚Äç‚öïÔ∏è Profissionais: ${profCorrigidosMatch ? '‚úÖ CORRESPONDE' : '‚ùå N√ÉO CORRESPONDE'}`);

console.log('\n' + '='.repeat(80) + '\n');

// ========================================
// TESTE 5: EXEMPLOS DE USO
// ========================================
console.log('üöÄ TESTE 5: EXEMPLOS DE USO');
console.log('-------------------------------');

console.log('Executando exemplos de uso...\n');
usageExamples.exemplo1();
console.log('\n' + '='.repeat(80) + '\n');

usageExamples.exemplo2();
console.log('\n' + '='.repeat(80) + '\n');

usageExamples.exemplo3();
console.log('\n' + '='.repeat(80) + '\n');

// ========================================
// RESUMO DOS TESTES
// ========================================
console.log('üìä RESUMO DOS TESTES');
console.log('=====================');

const totalTestes = 5;
const testesPassaram = [
  examesCorrigidosMatch,
  profCorrigidosMatch,
  examesCorrigidos.includes('1. Ecocardiograma'),
  profCorrigidos.includes('1. *Dr. Roberto Silva*'),
  examesCorrigidos.includes('2. Teste Ergom√©trico')
].filter(Boolean).length;

console.log(`‚úÖ Testes que passaram: ${testesPassaram}/${totalTestes}`);

if (testesPassaram === totalTestes) {
  console.log('üéâ TODOS OS TESTES PASSARAM! As corre√ß√µes de formata√ß√£o est√£o funcionando corretamente.');
} else {
  console.log('‚ö†Ô∏è Alguns testes falharam. Verifique as implementa√ß√µes.');
}

console.log('\nüîß PROBLEMAS CORRIGIDOS:');
console.log('   ‚úÖ Caracteres especiais (‚Å†) removidos');
console.log('   ‚úÖ Quebras de linha corrigidas');
console.log('   ‚úÖ Formata√ß√£o de negrito para WhatsApp');
console.log('   ‚úÖ Espa√ßamento consistente');
console.log('   ‚úÖ Listas numeradas organizadas');

console.log('\nüì± FORMATO ADEQUADO PARA WHATSAPP:');
console.log('   ‚úÖ Quebras de linha duplas entre se√ß√µes');
console.log('   ‚úÖ Negrito usando *texto*');
console.log('   ‚úÖ Espa√ßamento consistente');
console.log('   ‚úÖ Listas bem organizadas');

console.log('\nüéØ PR√ìXIMOS PASSOS:');
console.log('   1. Integrar com o sistema LLM Orchestrator');
console.log('   2. Aplicar corre√ß√£o autom√°tica em todas as respostas');
console.log('   3. Testar em ambiente de produ√ß√£o');
console.log('   4. Monitorar qualidade das mensagens');

console.log('\n‚ú® TESTE CONCLU√çDO COM SUCESSO!');
