# Preservação de Comportamento das Features

## 🎯 Princípio Fundamental
**Todas as alterações devem visar manter o comportamento das features do sistema, a não ser que seja explicitamente sugerido a alteração da feature.**

## ✅ Comportamentos que DEVEM ser preservados:

### 1. **Sistema de Agendamentos**
- [Agendamentos.tsx](mdc:src/pages/Agendamentos.tsx) - Interface de agendamentos
- [appointmentService.ts](mdc:src/services/appointmentService.ts) - Lógica de agendamentos
- Calendário funcional com visualização de eventos
- Criação, edição e exclusão de agendamentos
- Integração com Google Calendar

### 2. **Sistema de Usuários e Permissões**
- [Auth.tsx](mdc:src/pages/Auth.tsx) - Autenticação
- [users/](mdc:src/components/users/) - Gestão de usuários
- Roles e permissões baseadas em RLS do Supabase
- Perfis de usuário (admin_lify, admin_clinic, etc.)

### 3. **Sistema de Clínicas**
- [clinics/](mdc:src/components/clinics/) - Gestão de clínicas
- [ClinicContext.tsx](mdc:src/contexts/ClinicContext.tsx) - Contexto de clínicas
- Associação de usuários com clínicas
- CRUD completo de clínicas

### 4. **Sistema de Conversas e Chat**
- [conversations/](mdc:src/components/conversations/) - Interface de conversas
- [conversation/](mdc:src/components/conversation/) - Chat individual
- Histórico de mensagens
- Integração com IA para respostas

### 5. **Sistema de Agentes WhatsApp**
- [agentes/](mdc:src/components/agentes/) - Gestão de agentes
- [whatsapp/](mdc:src/components/whatsapp/) - Interface WhatsApp
- Conexão e desconexão de agentes
- QR Code para autenticação
- Envio e recebimento de mensagens

### 6. **Sistema de IA e Contextualização**
- [contextualization/](mdc:src/components/contextualization/) - Chat contextualizado
- [ai/](mdc:src/services/ai/) - Serviços de IA
- Memória de conversas
- Reconhecimento de intenções
- Integração com GPT-4

### 7. **Backend e APIs**
- [server.js](mdc:server.js) - Servidor WhatsApp
- [supabase/functions/](mdc:supabase/functions/) - Edge Functions
- Endpoints REST para WhatsApp
- Webhooks para processamento de mensagens
- Integração com Supabase

## 🔄 Processo de Confirmação de Mudanças

### Antes de qualquer alteração:
1. **Identificar a feature afetada**
2. **Documentar o comportamento atual**
3. **Confirmar se a mudança é necessária**
4. **Testar após a implementação**

### Para mudanças de comportamento:
1. **Solicitar confirmação explícita do usuário**
2. **Explicar o impacto da mudança**
3. **Oferecer alternativas que preservem o comportamento**
4. **Implementar apenas após aprovação**

## ⚠️ Áreas Críticas (NÃO alterar sem confirmação):

### Estrutura de Dados
- Tabelas do Supabase
- Schemas de banco de dados
- Relacionamentos entre entidades

### APIs e Endpoints
- URLs de endpoints
- Estrutura de respostas
- Autenticação e autorização

### Integrações Externas
- Google Calendar
- WhatsApp Web.js
- OpenAI GPT-4
- Supabase

### Fluxo de Usuário
- Fluxo de autenticação
- Navegação entre páginas
- Estados de loading e erro
- Feedback visual

## 📋 Checklist de Preservação

Antes de implementar qualquer mudança:

- [ ] A mudança é necessária para correção de bug?
- [ ] A mudança foi explicitamente solicitada?
- [ ] O comportamento atual foi documentado?
- [ ] A mudança foi testada em ambiente isolado?
- [ ] O usuário foi consultado sobre mudanças de comportamento?
- [ ] Existe rollback plan se necessário?

## 🎯 Exemplo de Boa Prática

**❌ Ruim:**
```
// Alterar endpoint sem consultar
app.post('/api/whatsapp/send-message', (req, res) => {
  // Mudança que quebra compatibilidade
});
```

**✅ Bom:**
```
// Confirmar mudança antes de implementar
// "Deseja alterar o endpoint /api/whatsapp/send-message para incluir agentId?"
// Se sim, implementar com backward compatibility
app.post('/api/whatsapp/send-message', (req, res) => {
  // Manter compatibilidade com versão anterior
  const { agentId, to, message } = req.body;
  // Implementar nova lógica
});
```

## 📞 Comunicação

**Sempre perguntar antes de alterar comportamentos:**
- "Esta mudança pode afetar o comportamento atual. Confirma?"
- "Deseja preservar a compatibilidade com versões anteriores?"
- "Esta alteração pode quebrar integrações existentes. Prossegue?"

**Documentar mudanças:**
- Explicar o que mudou
- Por que mudou
- Como testar
- Impacto em outras features
description:
globs:
alwaysApply: false
---
