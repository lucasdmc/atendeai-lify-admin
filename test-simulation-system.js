// ========================================
// TESTE DO SISTEMA DE SIMULA√á√ÉO
// ========================================

import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabase = createClient(
  process.env.VITE_SUPABASE_URL || 'https://niakqdolcdwxtrkbqmdi.supabase.co',
  process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDE4MjU1OSwiZXhwIjoyMDY1NzU4NTU5fQ.SY8A3ReAs_D7SFBp99PpSe8rpm1hbWMv4b2q-c_VS5M'
);

async function testSimulationSystem() {
  try {
    console.log('üß™ TESTE DO SISTEMA DE SIMULA√á√ÉO');
    console.log('='.repeat(50));

    // 1. Verificar se o campo simulation_mode existe na tabela clinics
    console.log('\nüìã 1. Verificando estrutura da tabela clinics...');
    const { data: clinicStructure, error: structureError } = await supabase
      .from('clinics')
      .select('simulation_mode')
      .limit(1);

    if (structureError) {
      console.error('‚ùå Erro ao verificar estrutura:', structureError);
      console.log('üí° O campo simulation_mode pode n√£o existir. Execute o script SQL primeiro.');
      return;
    }

    console.log('‚úÖ Campo simulation_mode encontrado na tabela clinics');

    // 2. Listar cl√≠nicas e seus modos de simula√ß√£o
    console.log('\nüìã 2. Listando cl√≠nicas e modos de simula√ß√£o...');
    const { data: clinics, error: clinicsError } = await supabase
      .from('clinics')
      .select('id, name, whatsapp_phone, simulation_mode')
      .order('name');

    if (clinicsError) {
      console.error('‚ùå Erro ao buscar cl√≠nicas:', clinicsError);
      return;
    }

    console.log('üìä Cl√≠nicas encontradas:');
    clinics.forEach(clinic => {
      const status = clinic.simulation_mode ? 'üé≠ SIMULA√á√ÉO' : 'üöÄ PRODU√á√ÉO';
      console.log(`  - ${clinic.name} (${clinic.whatsapp_phone}): ${status}`);
    });

    // 3. Ativar modo simula√ß√£o em uma cl√≠nica de teste
    console.log('\nüìã 3. Ativando modo simula√ß√£o em cl√≠nica de teste...');
    const testClinic = clinics.find(c => c.name.toLowerCase().includes('cardio'));
    
    if (testClinic) {
      const { error: updateError } = await supabase
        .from('clinics')
        .update({ simulation_mode: true })
        .eq('id', testClinic.id);

      if (updateError) {
        console.error('‚ùå Erro ao ativar simula√ß√£o:', updateError);
      } else {
        console.log(`‚úÖ Modo simula√ß√£o ativado para: ${testClinic.name}`);
      }
    } else {
      console.log('‚ö†Ô∏è Nenhuma cl√≠nica Cardio encontrada para teste');
    }

    // 4. Verificar conversas em modo simula√ß√£o
    console.log('\nüìã 4. Verificando conversas em modo simula√ß√£o...');
    const { data: simulationConversations, error: convError } = await supabase
      .from('whatsapp_conversations_improved')
      .select(`
        id,
        patient_phone_number,
        last_message_preview,
        last_message_at,
        clinics!inner(
          name,
          simulation_mode
        )
      `)
      .eq('clinics.simulation_mode', true)
      .order('last_message_at', { ascending: false });

    if (convError) {
      console.error('‚ùå Erro ao buscar conversas de simula√ß√£o:', convError);
    } else {
      console.log(`üìä Conversas em modo simula√ß√£o: ${simulationConversations?.length || 0}`);
      simulationConversations?.forEach(conv => {
        console.log(`  - ${conv.patient_phone_number} (${conv.clinics.name}): ${conv.last_message_preview}`);
      });
    }

    // 5. Verificar mensagens simuladas
    console.log('\nüìã 5. Verificando mensagens simuladas...');
    const { data: simulationMessages, error: msgError } = await supabase
      .from('whatsapp_messages_improved')
      .select(`
        id,
        content,
        message_type,
        created_at,
        conversations!inner(
          clinics!inner(
            name,
            simulation_mode
          )
        )
      `)
      .eq('conversations.clinics.simulation_mode', true)
      .eq('message_type', 'simulated')
      .order('created_at', { ascending: false })
      .limit(10);

    if (msgError) {
      console.error('‚ùå Erro ao buscar mensagens simuladas:', msgError);
    } else {
      console.log(`üìä Mensagens simuladas encontradas: ${simulationMessages?.length || 0}`);
      simulationMessages?.forEach(msg => {
        console.log(`  - [${msg.message_type}] ${msg.content.substring(0, 50)}...`);
      });
    }

    // 6. Teste de simula√ß√£o de mensagem
    console.log('\nüìã 6. Simulando processamento de mensagem...');
    const testMessage = {
      from: '5547999999999',
      to: testClinic?.whatsapp_phone || '554730915628',
      text: 'Ol√°! Gostaria de agendar uma consulta'
    };

    console.log('üì§ Mensagem de teste:', testMessage);
    console.log('üí° Esta mensagem seria processada pelo webhook com controle de simula√ß√£o');
    console.log('üé≠ Em modo simula√ß√£o: IA processa, resposta salva, mas N√ÉO envia para WhatsApp');
    console.log('üöÄ Em modo produ√ß√£o: IA processa, resposta salva E envia para WhatsApp');

    // 7. Resumo do sistema
    console.log('\nüìã 7. RESUMO DO SISTEMA DE SIMULA√á√ÉO');
    console.log('='.repeat(50));
    console.log('‚úÖ Campo simulation_mode na tabela clinics');
    console.log('‚úÖ Webhook com controle de simula√ß√£o implementado');
    console.log('‚úÖ Tela de simula√ß√£o criada (espelho das conversas)');
    console.log('‚úÖ ChatArea suporta modo simula√ß√£o');
    console.log('‚úÖ Rotas configuradas (/simulacao)');
    console.log('‚úÖ Sidebar atualizado com link para simula√ß√£o');
    console.log('');
    console.log('üéØ COMO USAR:');
    console.log('1. V√° para Cl√≠nicas > Editar cl√≠nica');
    console.log('2. Ative o toggle "Modo de Simula√ß√£o"');
    console.log('3. Clientes enviam mensagens reais para WhatsApp');
    console.log('4. IA processa normalmente');
    console.log('5. Respostas aparecem apenas no Simulador de Atendimento');
    console.log('6. Clientes N√ÉO recebem respostas no WhatsApp');
    console.log('');
    console.log('üîÑ PARA ATIVAR PRODU√á√ÉO:');
    console.log('1. V√° para Cl√≠nicas > Editar cl√≠nica');
    console.log('2. Desative o toggle "Modo de Simula√ß√£o"');
    console.log('3. Clientes receber√£o respostas normalmente');

  } catch (error) {
    console.error('üí• Erro no teste:', error);
  }
}

// Executar teste
testSimulationSystem(); 