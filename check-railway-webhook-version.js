import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://niakqdolcdwxtrkbqmdi.supabase.co';
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDE4MjU1OSwiZXhwIjoyMDY1NzU4NTU5fQ.SY8A3ReAs_D7SFBp99PpSe8rpm1hbWMv4b2q-c_VS5M';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkRailwayWebhookVersion() {
  console.log('üîç VERIFICANDO VERS√ÉO DO WEBHOOK NO RAILWAY');
  console.log('============================================');

  try {
    // 1. Verificar se h√° mensagens das √∫ltimas horas
    const lastHour = new Date();
    lastHour.setHours(lastHour.getHours() - 1);
    
    console.log('üîç Buscando mensagens da √∫ltima hora...');
    const { data: recentMessages, error: messagesError } = await supabase
      .from('whatsapp_messages_improved')
      .select('*')
      .gte('created_at', lastHour.toISOString())
      .order('created_at', { ascending: false });

    if (messagesError) {
      console.error('‚ùå Erro ao buscar mensagens recentes:', messagesError);
      return;
    }

    console.log('‚úÖ Mensagens da √∫ltima hora:', recentMessages.length);
    recentMessages.forEach((msg, index) => {
      const date = new Date(msg.created_at);
      console.log(`   ${index + 1}. ${date.toLocaleString('pt-BR')} | De: ${msg.sender_phone} | Para: ${msg.receiver_phone} | Tipo: ${msg.message_type} | Conte√∫do: ${msg.content.substring(0, 50)}...`);
    });

    // 2. Verificar se h√° mensagens espec√≠ficas que voc√™ enviou
    console.log('\nüîç Verificando mensagens espec√≠ficas...');
    const { data: specificMessages, error: specificError } = await supabase
      .from('whatsapp_messages_improved')
      .select('*')
      .or(`content.ilike.%Oi%,content.ilike.%Teste%`)
      .order('created_at', { ascending: false });

    if (specificError) {
      console.error('‚ùå Erro ao buscar mensagens espec√≠ficas:', specificError);
      return;
    }

    console.log('‚úÖ Mensagens com "Oi" ou "Teste" encontradas:', specificMessages.length);
    specificMessages.forEach((msg, index) => {
      const date = new Date(msg.created_at);
      console.log(`   ${index + 1}. ${date.toLocaleString('pt-BR')} | De: ${msg.sender_phone} | Para: ${msg.receiver_phone} | Conte√∫do: ${msg.content}`);
    });

    // 3. An√°lise cr√≠tica
    console.log('\nüéØ AN√ÅLISE CR√çTICA:');
    console.log('===================');
    
    if (recentMessages.length === 0) {
      console.log('‚ùå NENHUMA mensagem recente encontrada');
      console.log('‚ùå O webhook do Railway N√ÉO est√° salvando mensagens');
      console.log('üîß POSS√çVEIS CAUSAS:');
      console.log('   1. Webhook antigo no Railway (sem salvamento)');
      console.log('   2. Vari√°veis de ambiente incorretas no Railway');
      console.log('   3. Erro no c√≥digo do webhook no Railway');
      console.log('   4. Permiss√µes do Supabase incorretas no Railway');
    } else {
      console.log('‚úÖ Mensagens recentes encontradas');
      console.log('‚úÖ O webhook do Railway EST√Å salvando mensagens');
      
      const messagesFromUser = recentMessages.filter(msg => 
        msg.sender_phone === '5547997192447' && 
        msg.message_type === 'received'
      );
      
      if (messagesFromUser.length === 0) {
        console.log('‚ö†Ô∏è  Nenhuma mensagem do seu n√∫mero encontrada');
        console.log('üîß POSS√çVEIS CAUSAS:');
        console.log('   1. Webhook antigo no Railway (sem salvamento)');
        console.log('   2. Mensagens n√£o est√£o sendo processadas pelo webhook');
        console.log('   3. Erro no processamento das mensagens');
      } else {
        console.log('‚úÖ Mensagens do seu n√∫mero encontradas');
        console.log('‚úÖ Sistema funcionando corretamente');
      }
    }

    // 4. Verificar se o Railway precisa ser atualizado
    console.log('\nüîß VERIFICANDO NECESSIDADE DE ATUALIZA√á√ÉO:');
    console.log('==========================================');
    
    if (recentMessages.length === 0) {
      console.log('‚ùå NENHUMA mensagem recente encontrada');
      console.log('‚ùå O Railway precisa ser atualizado');
      console.log('üîß A√á√ïES NECESS√ÅRIAS:');
      console.log('   1. Fazer deploy da vers√£o atualizada do webhook');
      console.log('   2. Verificar vari√°veis de ambiente no Railway');
      console.log('   3. Verificar logs do Railway');
    } else {
      console.log('‚úÖ Mensagens recentes encontradas');
      console.log('‚úÖ Railway est√° funcionando corretamente');
    }

    // 5. Instru√ß√µes para atualizar o Railway
    console.log('\nüöÄ INSTRU√á√ïES PARA ATUALIZAR O RAILWAY:');
    console.log('=========================================');
    console.log('1. Fazer commit das altera√ß√µes:');
    console.log('   git add .');
    console.log('   git commit -m "Atualizar webhook com salvamento de mensagens"');
    console.log('   git push');
    console.log('');
    console.log('2. Verificar se o Railway fez deploy automaticamente');
    console.log('');
    console.log('3. Verificar logs do Railway para ver se h√° erros');
    console.log('');
    console.log('4. Testar enviando uma nova mensagem');

  } catch (error) {
    console.error('üí• Erro no teste:', error);
  }
}

checkRailwayWebhookVersion(); 