
// ========================================
// TESTE DA CONTEXTUALIZA√á√ÉO COMPLETA
// ========================================

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';
import ClinicContextService from './src/services/clinicContextService.js';

dotenv.config();

const supabase = createClient(
  'https://niakqdolcdwxtrkbqmdi.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pYWtxZG9sY2R3eHRya2JxbWRpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAxODI1NTksImV4cCI6MjA2NTc1ODU1OX0.90ihAk2geP1JoHIvMj_pxeoMe6dwRwH-rBbJwbFeomw'
);

async function testContextualization() {
  console.log('üè• Testando Contextualiza√ß√£o Completa...\n');
  
  const testPhone = '+5547999999999';
  
  // Teste 1: Buscar cl√≠nica por n√∫mero
  console.log('üìù Teste 1: Buscando cl√≠nica por n√∫mero WhatsApp');
  try {
    const clinic = await ClinicContextService.getClinicByWhatsAppNumber(testPhone);
    
    if (clinic) {
      console.log('‚úÖ Cl√≠nica encontrada:', clinic.name);
      console.log('üìä Dados da cl√≠nica:');
      console.log('- Especialidade:', clinic.specialty);
      console.log('- M√©dicos:', clinic.doctors?.length || 0);
      console.log('- Servi√ßos:', clinic.services?.length || 0);
      console.log('- Contato:', clinic.contact?.phone);
    } else {
      console.log('‚ùå Cl√≠nica n√£o encontrada');
    }
  } catch (error) {
    console.log('‚ùå Erro ao buscar cl√≠nica:', error.message);
  }
  
  // Teste 2: Gerar prompt contextualizado
  console.log('\nüìù Teste 2: Gerando prompt contextualizado');
  try {
    const clinic = await ClinicContextService.getClinicByWhatsAppNumber(testPhone);
    const systemPrompt = ClinicContextService.generateSystemPromptFromContext(clinic);
    
    console.log('‚úÖ Prompt gerado com sucesso!');
    console.log('üìä Tamanho do prompt:', systemPrompt.length, 'caracteres');
    console.log('üìã Primeiros 200 caracteres:');
    console.log(systemPrompt.substring(0, 200) + '...');
  } catch (error) {
    console.log('‚ùå Erro ao gerar prompt:', error.message);
  }
  
  // Teste 3: Testar com diferentes mensagens
  console.log('\nüìù Teste 3: Testando com diferentes mensagens');
  const testMessages = [
    'Ol√°!',
    'Me chamo Lucas',
    'Qual o meu nome?',
    'Quais s√£o os hor√°rios de funcionamento?',
    'Quanto custa uma consulta?',
    'Quais m√©dicos atendem hoje?'
  ];
  
  for (const message of testMessages) {
    console.log(`\nüí¨ Testando: "${message}"`);
    try {
      const clinic = await ClinicContextService.getClinicByWhatsAppNumber(testPhone);
      const systemPrompt = ClinicContextService.generateSystemPromptFromContext(clinic);
      
      console.log('‚úÖ Prompt gerado para:', message);
      console.log('üìä Contexto inclu√≠do:', !!clinic);
    } catch (error) {
      console.log('‚ùå Erro no teste:', error.message);
    }
  }
  
  console.log('\nüéâ Teste da Contextualiza√ß√£o Completa Conclu√≠do!');
}

// Executar teste
testContextualization().catch(console.error);
