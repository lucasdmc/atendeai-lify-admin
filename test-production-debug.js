import dotenv from 'dotenv';
import { ClinicContextManager } from './services/core/clinicContextManager.js';

dotenv.config();

async function testProductionDebug() {
  console.log('üîç TESTE DE PRODU√á√ÉO - DEBUG SCHEMA DIN√ÇMICO');
  console.log('==============================================');
  
  try {
    // 1. Testar inicializa√ß√£o
    console.log('\n1Ô∏è‚É£ Inicializando ClinicContextManager...');
    await ClinicContextManager.initialize();
    console.log('‚úÖ Inicializado com sucesso');
    
    // 2. Testar busca de cl√≠nica
    console.log('\n2Ô∏è‚É£ Buscando cl√≠nica CardioPrime...');
    const clinicName = await ClinicContextManager.getClinicByWhatsApp('+554730915628');
    console.log('‚úÖ Cl√≠nica encontrada:', clinicName);
    
    if (!clinicName) {
      console.log('‚ùå Nenhuma cl√≠nica encontrada para este WhatsApp');
      return;
    }
    
    // 3. Testar contexto completo
    console.log('\n3Ô∏è‚É£ Carregando contexto completo...');
    const context = await ClinicContextManager.getClinicContext(clinicName);
    
    console.log('üìä DADOS EXTRA√çDOS:');
    console.log('   - Nome:', context?.name);
    console.log('   - Endere√ßo:', context?.address?.completo);
    console.log('   - Telefone:', context?.contacts?.telefone);
    console.log('   - Servi√ßos:', context?.services?.length || 0);
    console.log('   - Profissionais:', context?.professionals?.length || 0);
    
    // 4. Testar dados espec√≠ficos
    if (context?.services && context.services.length > 0) {
      console.log('\nüìã SERVI√áOS ENCONTRADOS:');
      context.services.slice(0, 3).forEach((service, i) => {
        console.log(`   ${i + 1}. ${service}`);
      });
    }
    
    if (context?.professionals && context.professionals.length > 0) {
      console.log('\nüë®‚Äç‚öïÔ∏è PROFISSIONAIS ENCONTRADOS:');
      context.professionals.slice(0, 3).forEach((prof, i) => {
        console.log(`   ${i + 1}. ${prof}`);
      });
    }
    
    // 5. Testar se o LLM receberia essas informa√ß√µes
    console.log('\n4Ô∏è‚É£ VERIFICANDO SE LLM RECEBERIA:');
    console.log('   - hasServices:', !!context?.services?.length);
    console.log('   - hasProfessionals:', !!context?.professionals?.length);
    console.log('   - hasWorkingHours:', !!context?.workingHours);
    
    console.log('\nüéØ RESULTADO:');
    if (context?.services?.length > 0 && context?.professionals?.length > 0) {
      console.log('‚úÖ SCHEMA DIN√ÇMICO FUNCIONANDO - LLM deve receber informa√ß√µes completas');
    } else {
      console.log('‚ùå SCHEMA DIN√ÇMICO FALHANDO - LLM n√£o receber√° informa√ß√µes completas');
    }
    
  } catch (error) {
    console.error('üí• ERRO NO TESTE:', error);
  }
}

testProductionDebug();
