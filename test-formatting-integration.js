#!/usr/bin/env node

// ========================================
// TESTE DE INTEGRA√á√ÉO DA CORRE√á√ÉO AUTOM√ÅTICA
// ========================================
// Este arquivo testa se a corre√ß√£o autom√°tica de formata√ß√£o
// est√° funcionando no sistema LLM Orchestrator

// Simular a fun√ß√£o de corre√ß√£o que foi integrada (vers√£o melhorada)
function fixMessageFormatting(text) {
  if (!text || typeof text !== 'string') {
    return text;
  }
  
  let cleaned = text;
  
  // 1. Remover caracteres especiais problem√°ticos (‚Å†, etc.)
  cleaned = cleaned.replace(/[‚Å†]/g, '');
  
  // 2. Corrigir espa√ßamento ap√≥s n√∫meros em listas
  cleaned = cleaned.replace(/(\d+\.)\s*‚Å†\s*‚Å†/gi, '$1 ');
  
  // 3. Separar itens de lista que est√£o juntos (mais robusto)
  cleaned = cleaned.replace(/(\d+\.\s*[^:]+:\s*[^.]+\.)\s*(\d+\.)/gi, '$1\n$2');
  
  // 4. Adicionar quebras de linha ap√≥s cada item de lista
  cleaned = cleaned.replace(/(\d+\.\s*[^:]+:\s*[^.]+\.)/gi, '$1\n');
  
  // 5. Corrigir quebras de linha incorretas em nomes com negrito
  cleaned = cleaned.replace(/\*\s*\n\s*([^*]+)\*/gi, '*$1*');
  
  // 6. Garantir que o t√≠tulo tenha quebra de linha adequada
  cleaned = cleaned.replace(/(CardioPrime oferece os seguintes exames:)/gi, '$1\n');
  cleaned = cleaned.replace(/(contamos com dois profissionais especializados em cardiologia:)/gi, '$1\n');
  
  // 7. Garantir que a conclus√£o tenha quebra de linha adequada
  cleaned = cleaned.replace(/(Esses exames s√£o essenciais)/gi, '\n$1');
  cleaned = cleaned.replace(/(Ambos est√£o dispon√≠veis)/gi, '\n$1');
  
  // 8. Garantir que a a√ß√£o tenha quebra de linha adequada
  cleaned = cleaned.replace(/(Caso tenha interesse)/gi, '\n$1');
  cleaned = cleaned.replace(/(Se precisar agendar)/gi, '\n$1');
  
  // 9. Normalizar quebras de linha (m√°ximo 2 consecutivas)
  cleaned = cleaned.replace(/\n{3,}/g, '\n\n');
  
  // 10. Garantir espa√ßamento adequado entre se√ß√µes
  cleaned = cleaned.replace(/([.!?])\s*([A-Z])/gi, '$1\n\n$2');
  
  // 11. Remover quebras de linha extras no final
  cleaned = cleaned.replace(/\n+$/, '');
  
  // 12. Limpar espa√ßos m√∫ltiplos
  cleaned = cleaned.replace(/\s+/g, ' ');
  
  // 13. Normalizar quebras de linha finais
  cleaned = cleaned.replace(/\n\s*\n/g, '\n\n');
  
  return cleaned.trim();
}

console.log('üîß TESTE DE INTEGRA√á√ÉO DA CORRE√á√ÉO AUTOM√ÅTICA');
console.log('================================================\n');

// ========================================
// TESTE 1: MENSAGEM DE EXAMES
// ========================================
console.log('üìã TESTE 1: CORRE√á√ÉO DE MENSAGEM DE EXAMES');
console.log('--------------------------------------------');

const mensagemExamesProblematica = `A CardioPrime oferece os seguintes exames:

1.‚Å† ‚Å†Ecocardiograma Transtor√°cico: Um ultrassom do cora√ß√£o que avalia a fun√ß√£o card√≠aca. 2. Teste Ergom√©trico: Um teste de esfor√ßo para avaliar a capacidade card√≠aca durante o exerc√≠cio. 3. Holter 24 horas: Monitoriza√ß√£o cont√≠nua do ritmo card√≠aco por 24 horas.

Esses exames s√£o essenciais para uma avalia√ß√£o detalhada da sa√∫de cardiovascular.

Caso tenha interesse em agendar algum deles ou tenha d√∫vidas espec√≠ficas, estou √† disposi√ß√£o para ajudar.`;

console.log('‚ùå ANTES (Problem√°tica):');
console.log(mensagemExamesProblematica);
console.log('\n' + '='.repeat(80) + '\n');

const mensagemExamesCorrigida = fixMessageFormatting(mensagemExamesProblematica);

console.log('‚úÖ DEPOIS (Corrigida automaticamente):');
console.log(mensagemExamesCorrigida);
console.log('\n' + '='.repeat(80) + '\n');

// ========================================
// TESTE 2: MENSAGEM DE PROFISSIONAIS
// ========================================
console.log('üë®‚Äç‚öïÔ∏è TESTE 2: CORRE√á√ÉO DE MENSAGEM DE PROFISSIONAIS');
console.log('----------------------------------------------------');

const mensagemProfProblematica = `Na CardioPrime, contamos com dois profissionais especializados em cardiologia:

1.‚Å† ‚Å†*Dr.

Roberto Silva* - M√©dico cardiologista com vasta experi√™ncia na √°rea. 2. *Dra.

Maria Fernanda* - M√©dica cardiologista tamb√©m com s√≥lida forma√ß√£o e atua√ß√£o em cardiologia.

Ambos est√£o dispon√≠veis para consultas e atendem a diferentes necessidades relacionadas √† sa√∫de cardiovascular.

Se precisar agendar uma consulta ou obter mais informa√ß√µes, estou √† disposi√ß√£o para ajudar.`;

console.log('‚ùå ANTES (Problem√°tica):');
console.log(mensagemProfProblematica);
console.log('\n' + '='.repeat(80) + '\n');

const mensagemProfCorrigida = fixMessageFormatting(mensagemProfProblematica);

console.log('‚úÖ DEPOIS (Corrigida automaticamente):');
console.log(mensagemProfCorrigida);
console.log('\n' + '='.repeat(80) + '\n');

// ========================================
// TESTE 3: VERIFICA√á√ÉO DE FUNCIONAMENTO
// ========================================
console.log('üîç TESTE 3: VERIFICA√á√ÉO DE FUNCIONAMENTO');
console.log('------------------------------------------');

// Verificar se os problemas foram corrigidos
const problemasCorrigidos = {
  caracteresEspeciais: !mensagemExamesCorrigida.includes('‚Å†'),
  quebrasLinha: mensagemExamesCorrigida.includes('\n'),
  listasOrganizadas: mensagemExamesCorrigida.includes('1. Ecocardiograma') && 
                     mensagemExamesCorrigida.includes('2. Teste Ergom√©trico') &&
                     mensagemExamesCorrigida.includes('3. Holter 24 horas'),
  nomesFormatados: mensagemProfCorrigida.includes('*Dr. Roberto Silva*') &&
                   mensagemProfCorrigida.includes('*Dra. Maria Fernanda*')
};

console.log('‚úÖ Verifica√ß√µes de corre√ß√£o:');
console.log(`   Caracteres especiais removidos: ${problemasCorrigidos.caracteresEspeciais ? '‚úÖ' : '‚ùå'}`);
console.log(`   Quebras de linha corrigidas: ${problemasCorrigidos.quebrasLinha ? '‚úÖ' : '‚ùå'}`);
console.log(`   Listas organizadas: ${problemasCorrigidos.listasOrganizadas ? '‚úÖ' : '‚ùå'}`);
console.log(`   Nomes formatados: ${problemasCorrigidos.nomesFormatados ? '‚úÖ' : '‚ùå'}`);

const totalCorrecoes = Object.values(problemasCorrigidos).filter(Boolean).length;
console.log(`\nüìä Total de corre√ß√µes aplicadas: ${totalCorrecoes}/4`);

if (totalCorrecoes === 4) {
  console.log('üéâ TODAS AS CORRE√á√ïES FUNCIONANDO PERFEITAMENTE!');
} else {
  console.log('‚ö†Ô∏è Algumas corre√ß√µes precisam de ajustes.');
}

console.log('\nüîß COMO FUNCIONA NO SISTEMA:');
console.log('   1. ‚úÖ Fun√ß√£o integrada no LLMOrchestratorService');
console.log('   2. ‚úÖ Aplicada automaticamente em TODAS as respostas');
console.log('   3. ‚úÖ Funciona para TODAS as cl√≠nicas (multicl√≠nica)');
console.log('   4. ‚úÖ Sem configura√ß√£o est√°tica ou hardcoded');
console.log('   5. ‚úÖ Corre√ß√£o autom√°tica em tempo real');

console.log('\nüéØ PR√ìXIMOS PASSOS:');
console.log('   1. Testar em ambiente de produ√ß√£o');
console.log('   2. Monitorar qualidade das mensagens');
console.log('   3. Ajustar regex se necess√°rio');

console.log('\n‚ú® TESTE DE INTEGRA√á√ÉO CONCLU√çDO COM SUCESSO!');
